function staleMate(color,observer)
{
    var pieces,square,name;
    if (color === 1)
        pieces = observer.pieces.getAllWhite();
    else
        pieces = observer.pieces.getAllBlack();

    for(var i = 0; i<pieces.length; i++){
        square = pieces[i].square();
        name = square.getPieceName();
        switch(name){
            case 'P' : return pawn(square,observer,color);
            case 'S' : return knight(square,observer);
            case 'B' : return bishop(square,observer);
            case 'R' : return rook(square,observer);
            case 'Q' : return(rook(square,observer) || bishop(square,observer));
            default  : return false;
        }
    }
}

function pawn(square,observer,color){
    var file = conv(square.file());
    var rank = square.rank();

    if(color == 1)
        color = 0;
    else
        color =1;

    if(observer.board.getSquare(file,rank+1).getPiece != ' ')
        return true;

    if(file+1 >0 && file+1<9 && rank+1<9 && rank+1>0)
        if(observer.board.getSquare(file+1,rank+1).getPiece().getColor() != color)
            true
    if(file-1 >0 && file-1<9 && rank+1<9 && rank+1>0)
        if(observer.board.getSquare(file-1,rank+1).getPiece().getColor())
            return true;
    return false;
}

function knight(square,observer){
    var file = conv(square.file());
    var rank = square.rank();


    if( file+1 >0 && file+1<9 && rank+2<9 && rank+2>0)
        if(observer.board.getSquare(file+1,rank+2).getPiece().getColor()
            != square.getPiece().getColor())
            return false;

    if(file+2 >0 && file+2<9 && rank+1<9 && rank+1>0)
        if(observer.board.getSquare(file+2,rank+1).getPiece().getColor()
            != square.getPiece().getColor())
            return false;
    if(file+2 >0 && file+2<9 && rank-1<9 && rank-1>0)
        if(observer.board.getSquare(file+2,rank-1).getPiece().getColor()
            != square.getPiece().getColor())
            return false;

    if(file+1 >0 && file+1<9 && rank-2<9 && rank-2>0)
        if(observer.board.getSquare(file+1,rank-2).getPiece().getColor()
         != square.getPiece().getColor())
         return false;

    if(file-1 >0 && file-1<9 && rank-2<9 && rank-2>0)
        if(observer.board.getSquare(file-1,rank-2).getPiece().getColor()
        != square.getPiece().getColor())
            return false;

    if(file-2 >0 && file-2<9 && rank-1<9 && rank-1>0)
     if(observer.board.getSquare(file-2,rank-1).getPiece().getColor()
           != square.getPiece().getColor())
           return false;

    if(file-2 >0 && file-2<9 && rank+1<9 && rank+1>0)
     if(observer.board.getSquare(file-2,rank+1).getPiece().getColor()
          != square.getPiece().getColor())
          return false;

    if(file-1 >0 && file-1<9 && rank+2<9 && rank+2>0)
     if(observer.board.getSquare(file-1,rank+2).getPiece().getColor()
        != square.getPiece().getColor())
            return false;
        return true;
}

function bishop(square,observer){
    var file = conv(square.file());
    var rank = square.rank();

    if(file+1 >0 && file+1<9 && rank+1<9 && rank+1>0)
        if(observer.board.getSquare(file+1,rank+1).getPiece().getColor()
         != square.getPiece().getColor())
          return false;

    if(file+1 >0 && file+1<9 && rank-1<9 && rank-1>0)
        if(observer.board.getSquare(file+1,rank-1).getPiece().getColor()
            != square.getPiece().getColor())
            return false;

    if(file-1 >0 && file-1<9 && rank-1<9 && rank-1>0)
        if(observer.board.getSquare(file-1,rank-1).getPiece().getColor()
            != square.getPiece().getColor())
            return false;

    if(file-1 >0 && file-1<9 && rank+1<9 && rank+1>0)
        if(observer.board.getSquare(file-1,rank+1).getPiece().getColor()
            != square.getPiece().getColor())
            return false;
    return true;
}

function rook(square,observer){
    var file = conv(square.file());
    var rank = square.rank();

    if(rank+1 > 0 && rank+1<9)
        if(observer.board.getSquare(file,rank+1).getPiece().getColor()
            != square.getPiece().getColor())
            return false;

    if(rank-1 > 0 && rank+1<9)
        if(observer.board.getSquare(file,rank-1).getPiece().getColor()
            != square.getPiece().getColor())
            return false;

    if(file+1 > 0 && file+1<9)
        if(observer.board.getSquare(file+1,rank).getPiece().getColor()
            != square.getPiece().getColor())
            return false;

    if (file-1 > 0 && file-1<9) {
        if(observer.board.getSquare(file-1,rank).getPiece().getColor()
            != square.getPiece().getColor())
            return false;
    }
    return true;
}

function conv(no){
    switch(no) {
        case 'a': return 1;
        case 'b': return 2;
        case 'c': return 3;
        case 'd': return 4;
        case 'e': return 5;
        case 'f': return 6;
        case 'g': return 7;
        case 'h': return 8;
        case  1 : return 'a';
        case  2 : return 'b';
        case  3 : return 'c';
        case  4 : return 'd';
        case  5 : return 'e';
        case  6 : return 'f';
        case  7 : return 'g';
        case  8 : return 'h';
        default : return 0;
    }
}

module.exports = staleMate;