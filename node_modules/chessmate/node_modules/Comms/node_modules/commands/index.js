// Returns an object containing a message and possibly executes a command
function parseCommand(command, args, bus) {
    switch(command) {
        case '/help':
            return { message: 'Not much here yet.<br>'
                    + 'Use "/move A1 A2" to move a piece',
                     command: true,
                     broadcast: false };

        // move is caught by the Engine and then processed
        case '/move':
            console.log(args[1] + ", " + args[2]);
            console.log(args[3]);
            var re = /[A-H][1-8]/;
            //If any input is not just one number, return null
            if (!re.test(args[1]) || !re.test(args[2])) {
                return { message: 'Illegal move ' + args[1] + '-' + args[2],
                         command: true,
                         broadcast: false };
            }
            // bus.emit('move') triggers index.js of engine
            bus.emit('move', [args[1], args[2], args[3]]);
            return { message: '',
                     command: true,
                     broadcast: false };

        /* Allows clearing the board for test purposes */
        case '/clear':
            bus.emit('clear');
            break;

        default:
            return { message: "Unknown command '" + command + "'<br>"
                   + "Type /help for a list of commands",
                     command: true,
                     broadcast: false };
    }
}

module.exports = parseCommand;