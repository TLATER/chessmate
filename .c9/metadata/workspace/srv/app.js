{"changed":true,"filter":false,"title":"app.js","tooltip":"/srv/app.js","value":"var express = require('express');\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar mongoose = require('mongoose');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\nvar passport = require('passport');\nvar flash = require('connect-flash');\nvar session = require('express-session');\n\nvar routes = require('./routes/index');\nvar users = require('./routes/users');\n\nvar app = express();\n\nvar configDB = require('./config/database.js');\n// configuration ===============================================================\nmongoose.connect(configDB.url); // connect to our database\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'ejs');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(__dirname + '/public/favicon.ico'));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }) );\napp.use(cookieParser());\napp.use(require('stylus').middleware(path.join(__dirname, 'public')));\napp.use(express.static(path.join(__dirname, 'public')));\n\n// required for passport\napp.use(session({ secret: 'ilovescotchscotchyscotchscotch' })); // session secret\napp.use(passport.initialize());\napp.use(passport.session()); // persistent login sessions\napp.use(flash()); // use connect-flash for flash messages stored in session\n\napp.use('/', routes);\napp.use('/users', users);\napp.use(express.static(__dirname + '/public')); \n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n    var err = new Error('Not Found');\n    err.status = 404;\n    next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n    app.use(function(err, req, res, next) {\n        res.status(err.status || 500);\n        res.render('error', {\n            message: err.message,\n            error: err\n        });\n    });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n        message: err.message,\n        error: {}\n    });\n});\n\n\nmodule.exports = app;\n","undoManager":{"mark":0,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":40,"column":25},"end":{"row":41,"column":48},"action":"insert","lines":["","app.use(express.static(__dirname + '/public')); "]}]}]]},"ace":{"folds":[],"scrolltop":240,"scrollleft":0,"selection":{"start":{"row":33,"column":24},"end":{"row":33,"column":24},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1425049313000}